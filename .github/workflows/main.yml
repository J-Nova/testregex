name: Deployment
on: 
  pull_request:
    branches:
      - main
    types: [closed]


jobs:
  deployment:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: "temp"
      
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # - name: Stopping containers
      #   run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'CONTAINERS=$(sudo docker ps -a -q --format="{{.ID}}") && sudo docker stop $CONTAINERS'

      - name: Stopping containers
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'docker ps -q --filter "name=testregex" | grep -q . && docker stop testregex && docker rm -fv testregex || echo "No containers to stop"'

      # - name: Removing containers
      #   run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'CONTAINERS=$(sudo docker ps -a -q --format="{{.ID}}") && sudo docker rm $CONTAINERS'

      - name: Deploying certificates
        run: |
          echo "${{ secrets.CERT_KEY }}" > ./webapp/server/cert.key
          echo "${{ secrets.CERT_CRT }}" > ./webapp/server/cert.crt
          echo "${{ secrets.CERT_CA_BUNDLE }}" > ./webapp/server/cert.ca-bundle

      - name: Deploy with rsync
        run: rsync -avz ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:testregex/

      - name: Deployment
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd testregex && sudo docker build -t testregex . && sudo docker run -d -p 443:3000 80:1500 testregex"